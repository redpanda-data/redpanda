# Copyright 2020 Redpanda Data, Inc.
#
# Use of this software is governed by the Business Source License
# included in the file licenses/BSL.md
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0

name: Go
on:
  push:
    tags:
    - 'v2**'
    branches:
      - '*'
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    name: Test and Build
    strategy:
      matrix:
        os: [linux, darwin]
        arch: [amd64, arm64]
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.8
      id: go

    - name: Set up Node
      uses: actions/setup-node@v2-beta
      with:
        node-version: '12.16.1'

    - name: Test
      working-directory: src/go/rpk/
      run: go test -v ./...

    - name: Build
      working-directory: src/go/rpk/
      run: |
        pkg='vectorized/pkg/cli/cmd/version'
        tag=$(echo ${{ github.ref }} | sed 's;refs/tags/;;g')

        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} ./build.sh $tag ${{ github.sha }}

    - name: Package
      working-directory: src/go/rpk/
      run: |
        zip -j rpk-${{ matrix.os }}-${{ matrix.arch }}.zip ./${{ matrix.os }}-${{ matrix.arch }}/rpk

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        name: rpk-archives
        path: |
          src/go/rpk/rpk-*.zip

  sign-darwin:
    name: Sign and notarize the darwin release_name
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        arch: [amd64, arm64]
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download zip
        uses: actions/download-artifact@v2
        with:
          name: rpk-archives
          path: zip/

      - name: Unzip darwin build
        working-directory: zip/
        run: |
          unzip rpk-darwin-${{ matrix.arch }}.zip
          rm rpk-darwin-${{ matrix.arch }}.zip

      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}

      - name: Install gon for code signing and app notarization
        run: |
          curl -LO https://github.com/mitchellh/gon/releases/download/v0.2.3/gon_macos.zip
          unzip gon_macos.zip
          rm gon_macos.zip

      - name: Sign the mac binaries with Gon
        working-directory: zip/
        env:
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
        run: |
          ../gon -log-level=info ../src/go/rpk/gon_${{ matrix.arch }}.json

      - name: Upload signed Package
        uses: actions/upload-artifact@v2
        with:
          name: rpk-archives
          path: zip/rpk-darwin-${{ matrix.arch }}.zip

  create-release:
    name: Create release
    needs: [build, sign-darwin]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - name: Create rpk release
      id: create_rpk_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_rpk_release.outputs.upload_url }}

  publish-release-artifacts:
    name: Publish release
    needs: create-release
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        arch: [amd64, arm64]
        os: [linux, darwin]
    runs-on: ubuntu-latest
    steps:
    - name: Download compressed rpk artifacts
      uses: actions/download-artifact@v2

    - name: Upload rpk artifacts to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: rpk-archives/rpk-${{ matrix.os }}-${{ matrix.arch }}.zip
        asset_name: rpk-${{ matrix.os }}-${{ matrix.arch }}.zip
        asset_content_type: application/zip
