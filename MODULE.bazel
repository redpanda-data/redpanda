module(
    name = "redpanda",
    repo_name = "com_github_redpanda_data_redpanda",
)

bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    commit = "a14ad3a64e7bf398ab48105aaa0348e032ac87f8",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
)

bazel_dep(name = "rules_boost", repo_name = "com_github_nelhage_rules_boost")
archive_override(
    module_name = "rules_boost",
    integrity = "sha256-PcGxb6Ffi1CajH1PIqlAJ6mgqQ5/XW3NNL7TLZvlSBs=",
    strip_prefix = "rules_boost-64bf4814222a6782fd0e7536532a257d7fdc9d80",
    urls = "https://github.com/nelhage/rules_boost/archive/64bf4814222a6782fd0e7536532a257d7fdc9d80.tar.gz",
)

non_module_boost_repositories = use_extension("@com_github_nelhage_rules_boost//:boost/repositories.bzl", "non_module_dependencies")
use_repo(
    non_module_boost_repositories,
    "boost",
)

bazel_dep(name = "abseil-cpp", version = "20240116.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "crc32c", version = "1.1.0")
bazel_dep(name = "fmt", version = "8.1.1")
bazel_dep(name = "googletest", version = "1.14.0.bcr.1")
bazel_dep(name = "liburing", version = "2.5")
bazel_dep(name = "lz4", version = "1.9.4")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "protobuf", version = "26.0")
bazel_dep(name = "re2", version = "2023-09-01")
bazel_dep(name = "rules_foreign_cc", version = "0.10.1")
bazel_dep(name = "rules_proto", version = "5.3.0-21.7")
bazel_dep(name = "xxhash", version = "0.8.2")
bazel_dep(name = "yaml-cpp", version = "0.8.0")
bazel_dep(name = "zlib", version = "1.3")
bazel_dep(name = "zstd", version = "1.5.6")
bazel_dep(name = "toolchains_llvm", version = "1.0.0")

# ====================================
# LLVM toolchains
# ====================================
LLVM_VERSIONS = {"": "16.0.4"}
BASE_COMPILER_FLAGS = {"": {
}}

# toolchains_llvm module
# TODO: for now uses my private fork that allow us to disable linking against libunwind
git_override(
    module_name = "toolchains_llvm",
    commit = "24b42c4db17f89bb4e829c0629ff5ea3b5291bce",
    remote = "https://github.com/mmaslankaprv/toolchains_llvm",
)

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")

# base LLVM toolchain, this one will download the LLVM binaries specific for the host platform
llvm.toolchain(
    name = "llvm_toolchain",
    llvm_versions = LLVM_VERSIONS,
    cxx_standard = {"": "c++20"},
    stdlib = {"": "builtin-libc++"},
)

use_repo(llvm, "llvm_toolchain", "llvm_toolchain_llvm")

register_toolchains("@llvm_toolchain//:all")

# toolchain using system LLVM
# TODO: submit a llvm_toolchain PR to exlcude libunwind
llvm.toolchain(
    name = "llvm_toolchain_system",
    llvm_versions = LLVM_VERSIONS,
    cxx_standard = {"": "c++20"},
    stdlib = {"": "builtin-libc++"},
    use_libunwind = {"": "false"},
)

llvm.toolchain_root(
    name = "llvm_toolchain_system",
    path = "/usr/lib/llvm-16/",
)

use_repo(llvm, "llvm_toolchain_system")

non_module_dependencies = use_extension("//bazel:extensions.bzl", "non_module_dependencies")
use_repo(non_module_dependencies, "ada")
use_repo(non_module_dependencies, "avro")
use_repo(non_module_dependencies, "base64")
use_repo(non_module_dependencies, "c-ares")
use_repo(non_module_dependencies, "cryptopp")
use_repo(non_module_dependencies, "gmp")
use_repo(non_module_dependencies, "gnutls")
use_repo(non_module_dependencies, "hdrhistogram")
use_repo(non_module_dependencies, "hwloc")
use_repo(non_module_dependencies, "krb5")
use_repo(non_module_dependencies, "libpciaccess")
use_repo(non_module_dependencies, "libxml2")
use_repo(non_module_dependencies, "lksctp")
use_repo(non_module_dependencies, "nettle")
use_repo(non_module_dependencies, "numactl")
use_repo(non_module_dependencies, "openssl")
use_repo(non_module_dependencies, "rapidjson")
use_repo(non_module_dependencies, "roaring")
use_repo(non_module_dependencies, "seastar")
use_repo(non_module_dependencies, "snappy")
use_repo(non_module_dependencies, "unordered_dense")
use_repo(non_module_dependencies, "wasmtime")
use_repo(non_module_dependencies, "xz")
