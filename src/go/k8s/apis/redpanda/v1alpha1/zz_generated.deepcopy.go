//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2022 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	metav1 "github.com/jetstack/cert-manager/pkg/apis/meta/v1"
	"k8s.io/api/core/v1"
	apismetav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdminAPI) DeepCopyInto(out *AdminAPI) {
	*out = *in
	in.External.DeepCopyInto(&out.External)
	out.TLS = in.TLS
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdminAPI.
func (in *AdminAPI) DeepCopy() *AdminAPI {
	if in == nil {
		return nil
	}
	out := new(AdminAPI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdminAPITLS) DeepCopyInto(out *AdminAPITLS) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdminAPITLS.
func (in *AdminAPITLS) DeepCopy() *AdminAPITLS {
	if in == nil {
		return nil
	}
	out := new(AdminAPITLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthConfig) DeepCopyInto(out *BasicAuthConfig) {
	*out = *in
	out.PasswordRef = in.PasswordRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthConfig.
func (in *BasicAuthConfig) DeepCopy() *BasicAuthConfig {
	if in == nil {
		return nil
	}
	out := new(BasicAuthConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartRef) DeepCopyInto(out *ChartRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartRef.
func (in *ChartRef) DeepCopy() *ChartRef {
	if in == nil {
		return nil
	}
	out := new(ChartRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudConfig) DeepCopyInto(out *CloudConfig) {
	*out = *in
	if in.PrometheusEndpoint != nil {
		in, out := &in.PrometheusEndpoint, &out.PrometheusEndpoint
		*out = new(PrometheusEndpointConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudConfig.
func (in *CloudConfig) DeepCopy() *CloudConfig {
	if in == nil {
		return nil
	}
	out := new(CloudConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudStorageConfig) DeepCopyInto(out *CloudStorageConfig) {
	*out = *in
	out.SecretKeyRef = in.SecretKeyRef
	if in.CacheStorage != nil {
		in, out := &in.CacheStorage, &out.CacheStorage
		*out = new(StorageSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudStorageConfig.
func (in *CloudStorageConfig) DeepCopy() *CloudStorageConfig {
	if in == nil {
		return nil
	}
	out := new(CloudStorageConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterCondition) DeepCopyInto(out *ClusterCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterCondition.
func (in *ClusterCondition) DeepCopy() *ClusterCondition {
	if in == nil {
		return nil
	}
	out := new(ClusterCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	if in.PodDisruptionBudget != nil {
		in, out := &in.PodDisruptionBudget, &out.PodDisruptionBudget
		*out = new(PDBConfig)
		(*in).DeepCopyInto(*out)
	}
	in.Resources.DeepCopyInto(&out.Resources)
	in.Sidecars.DeepCopyInto(&out.Sidecars)
	in.Configuration.DeepCopyInto(&out.Configuration)
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Storage.DeepCopyInto(&out.Storage)
	in.CloudStorage.DeepCopyInto(&out.CloudStorage)
	if in.Superusers != nil {
		in, out := &in.Superusers, &out.Superusers
		*out = make([]Superuser, len(*in))
		copy(*out, *in)
	}
	if in.KafkaEnableAuthorization != nil {
		in, out := &in.KafkaEnableAuthorization, &out.KafkaEnableAuthorization
		*out = new(bool)
		**out = **in
	}
	if in.AdditionalConfiguration != nil {
		in, out := &in.AdditionalConfiguration, &out.AdditionalConfiguration
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RestartConfig != nil {
		in, out := &in.RestartConfig, &out.RestartConfig
		*out = new(RestartConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LicenseRef != nil {
		in, out := &in.LicenseRef, &out.LicenseRef
		*out = new(SecretKeyRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.Nodes.DeepCopyInto(&out.Nodes)
	if in.DecommissioningNode != nil {
		in, out := &in.DecommissioningNode, &out.DecommissioningNode
		*out = new(int32)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ClusterCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connect) DeepCopyInto(out *Connect) {
	*out = *in
	if in.ConnectTimeout != nil {
		in, out := &in.ConnectTimeout, &out.ConnectTimeout
		*out = new(apismetav1.Duration)
		**out = **in
	}
	if in.ReadTimeout != nil {
		in, out := &in.ReadTimeout, &out.ReadTimeout
		*out = new(apismetav1.Duration)
		**out = **in
	}
	if in.RequestTimeout != nil {
		in, out := &in.RequestTimeout, &out.RequestTimeout
		*out = new(apismetav1.Duration)
		**out = **in
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ConnectCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connect.
func (in *Connect) DeepCopy() *Connect {
	if in == nil {
		return nil
	}
	out := new(Connect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectCluster) DeepCopyInto(out *ConnectCluster) {
	*out = *in
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(ConnectClusterTLS)
		(*in).DeepCopyInto(*out)
	}
	if in.BasicAuthRef != nil {
		in, out := &in.BasicAuthRef, &out.BasicAuthRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.TokenRef != nil {
		in, out := &in.TokenRef, &out.TokenRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectCluster.
func (in *ConnectCluster) DeepCopy() *ConnectCluster {
	if in == nil {
		return nil
	}
	out := new(ConnectCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectClusterTLS) DeepCopyInto(out *ConnectClusterTLS) {
	*out = *in
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectClusterTLS.
func (in *ConnectClusterTLS) DeepCopy() *ConnectClusterTLS {
	if in == nil {
		return nil
	}
	out := new(ConnectClusterTLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connectivity) DeepCopyInto(out *Connectivity) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connectivity.
func (in *Connectivity) DeepCopy() *Connectivity {
	if in == nil {
		return nil
	}
	out := new(Connectivity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Console) DeepCopyInto(out *Console) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Console.
func (in *Console) DeepCopy() *Console {
	if in == nil {
		return nil
	}
	out := new(Console)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Console) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleList) DeepCopyInto(out *ConsoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Console, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleList.
func (in *ConsoleList) DeepCopy() *ConsoleList {
	if in == nil {
		return nil
	}
	out := new(ConsoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleRedpandaConfig) DeepCopyInto(out *ConsoleRedpandaConfig) {
	*out = *in
	if in.AdminAPI != nil {
		in, out := &in.AdminAPI, &out.AdminAPI
		*out = new(RedpandaAdmin)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleRedpandaConfig.
func (in *ConsoleRedpandaConfig) DeepCopy() *ConsoleRedpandaConfig {
	if in == nil {
		return nil
	}
	out := new(ConsoleRedpandaConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleSpec) DeepCopyInto(out *ConsoleSpec) {
	*out = *in
	in.Server.DeepCopyInto(&out.Server)
	out.SchemaRegistry = in.SchemaRegistry
	out.ClusterRef = in.ClusterRef
	out.Deployment = in.Deployment
	in.Connect.DeepCopyInto(&out.Connect)
	if in.Enterprise != nil {
		in, out := &in.Enterprise, &out.Enterprise
		*out = new(Enterprise)
		**out = **in
	}
	if in.LicenseRef != nil {
		in, out := &in.LicenseRef, &out.LicenseRef
		*out = new(SecretKeyRef)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(EnterpriseLogin)
		(*in).DeepCopyInto(*out)
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(IngressConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(CloudConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Redpanda != nil {
		in, out := &in.Redpanda, &out.Redpanda
		*out = new(ConsoleRedpandaConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretStore != nil {
		in, out := &in.SecretStore, &out.SecretStore
		*out = new(SecretStore)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleSpec.
func (in *ConsoleSpec) DeepCopy() *ConsoleSpec {
	if in == nil {
		return nil
	}
	out := new(ConsoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleStatus) DeepCopyInto(out *ConsoleStatus) {
	*out = *in
	if in.ConfigMapRef != nil {
		in, out := &in.ConfigMapRef, &out.ConfigMapRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.Connectivity != nil {
		in, out := &in.Connectivity, &out.Connectivity
		*out = new(Connectivity)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleStatus.
func (in *ConsoleStatus) DeepCopy() *ConsoleStatus {
	if in == nil {
		return nil
	}
	out := new(ConsoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Deployment) DeepCopyInto(out *Deployment) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Deployment.
func (in *Deployment) DeepCopy() *Deployment {
	if in == nil {
		return nil
	}
	out := new(Deployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Enterprise) DeepCopyInto(out *Enterprise) {
	*out = *in
	out.RBAC = in.RBAC
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Enterprise.
func (in *Enterprise) DeepCopy() *Enterprise {
	if in == nil {
		return nil
	}
	out := new(Enterprise)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnterpriseLogin) DeepCopyInto(out *EnterpriseLogin) {
	*out = *in
	out.JWTSecretRef = in.JWTSecretRef
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = new(EnterpriseLoginGoogle)
		(*in).DeepCopyInto(*out)
	}
	if in.RedpandaCloud != nil {
		in, out := &in.RedpandaCloud, &out.RedpandaCloud
		*out = new(EnterpriseLoginRedpandaCloud)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnterpriseLogin.
func (in *EnterpriseLogin) DeepCopy() *EnterpriseLogin {
	if in == nil {
		return nil
	}
	out := new(EnterpriseLogin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnterpriseLoginGoogle) DeepCopyInto(out *EnterpriseLoginGoogle) {
	*out = *in
	out.ClientCredentialsRef = in.ClientCredentialsRef
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(EnterpriseLoginGoogleDirectory)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnterpriseLoginGoogle.
func (in *EnterpriseLoginGoogle) DeepCopy() *EnterpriseLoginGoogle {
	if in == nil {
		return nil
	}
	out := new(EnterpriseLoginGoogle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnterpriseLoginGoogleDirectory) DeepCopyInto(out *EnterpriseLoginGoogleDirectory) {
	*out = *in
	out.ServiceAccountRef = in.ServiceAccountRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnterpriseLoginGoogleDirectory.
func (in *EnterpriseLoginGoogleDirectory) DeepCopy() *EnterpriseLoginGoogleDirectory {
	if in == nil {
		return nil
	}
	out := new(EnterpriseLoginGoogleDirectory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnterpriseLoginRedpandaCloud) DeepCopyInto(out *EnterpriseLoginRedpandaCloud) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnterpriseLoginRedpandaCloud.
func (in *EnterpriseLoginRedpandaCloud) DeepCopy() *EnterpriseLoginRedpandaCloud {
	if in == nil {
		return nil
	}
	out := new(EnterpriseLoginRedpandaCloud)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnterpriseRBAC) DeepCopyInto(out *EnterpriseRBAC) {
	*out = *in
	out.RoleBindingsRef = in.RoleBindingsRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnterpriseRBAC.
func (in *EnterpriseRBAC) DeepCopy() *EnterpriseRBAC {
	if in == nil {
		return nil
	}
	out := new(EnterpriseRBAC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalConnectivityConfig) DeepCopyInto(out *ExternalConnectivityConfig) {
	*out = *in
	if in.Bootstrap != nil {
		in, out := &in.Bootstrap, &out.Bootstrap
		*out = new(LoadBalancerConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalConnectivityConfig.
func (in *ExternalConnectivityConfig) DeepCopy() *ExternalConnectivityConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalConnectivityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressConfig) DeepCopyInto(out *IngressConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressConfig.
func (in *IngressConfig) DeepCopy() *IngressConfig {
	if in == nil {
		return nil
	}
	out := new(IngressConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaAPI) DeepCopyInto(out *KafkaAPI) {
	*out = *in
	in.External.DeepCopyInto(&out.External)
	in.TLS.DeepCopyInto(&out.TLS)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaAPI.
func (in *KafkaAPI) DeepCopy() *KafkaAPI {
	if in == nil {
		return nil
	}
	out := new(KafkaAPI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaAPITLS) DeepCopyInto(out *KafkaAPITLS) {
	*out = *in
	if in.IssuerRef != nil {
		in, out := &in.IssuerRef, &out.IssuerRef
		*out = new(metav1.ObjectReference)
		**out = **in
	}
	if in.NodeSecretRef != nil {
		in, out := &in.NodeSecretRef, &out.NodeSecretRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaAPITLS.
func (in *KafkaAPITLS) DeepCopy() *KafkaAPITLS {
	if in == nil {
		return nil
	}
	out := new(KafkaAPITLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerWithName) DeepCopyInto(out *ListenerWithName) {
	*out = *in
	in.KafkaAPI.DeepCopyInto(&out.KafkaAPI)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerWithName.
func (in *ListenerWithName) DeepCopy() *ListenerWithName {
	if in == nil {
		return nil
	}
	out := new(ListenerWithName)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerConfig) DeepCopyInto(out *LoadBalancerConfig) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerConfig.
func (in *LoadBalancerConfig) DeepCopy() *LoadBalancerConfig {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerStatus) DeepCopyInto(out *LoadBalancerStatus) {
	*out = *in
	in.LoadBalancerStatus.DeepCopyInto(&out.LoadBalancerStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerStatus.
func (in *LoadBalancerStatus) DeepCopy() *LoadBalancerStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceNameRef) DeepCopyInto(out *NamespaceNameRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceNameRef.
func (in *NamespaceNameRef) DeepCopy() *NamespaceNameRef {
	if in == nil {
		return nil
	}
	out := new(NamespaceNameRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesList) DeepCopyInto(out *NodesList) {
	*out = *in
	if in.Internal != nil {
		in, out := &in.Internal, &out.Internal
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExternalBootstrap != nil {
		in, out := &in.ExternalBootstrap, &out.ExternalBootstrap
		*out = new(LoadBalancerStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalAdmin != nil {
		in, out := &in.ExternalAdmin, &out.ExternalAdmin
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExternalPandaproxy != nil {
		in, out := &in.ExternalPandaproxy, &out.ExternalPandaproxy
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PandaproxyIngress != nil {
		in, out := &in.PandaproxyIngress, &out.PandaproxyIngress
		*out = new(string)
		**out = **in
	}
	if in.SchemaRegistry != nil {
		in, out := &in.SchemaRegistry, &out.SchemaRegistry
		*out = new(SchemaRegistryStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesList.
func (in *NodesList) DeepCopy() *NodesList {
	if in == nil {
		return nil
	}
	out := new(NodesList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDBConfig) DeepCopyInto(out *PDBConfig) {
	*out = *in
	if in.MinAvailable != nil {
		in, out := &in.MinAvailable, &out.MinAvailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDBConfig.
func (in *PDBConfig) DeepCopy() *PDBConfig {
	if in == nil {
		return nil
	}
	out := new(PDBConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PandaproxyAPI) DeepCopyInto(out *PandaproxyAPI) {
	*out = *in
	in.External.DeepCopyInto(&out.External)
	in.TLS.DeepCopyInto(&out.TLS)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PandaproxyAPI.
func (in *PandaproxyAPI) DeepCopy() *PandaproxyAPI {
	if in == nil {
		return nil
	}
	out := new(PandaproxyAPI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PandaproxyAPITLS) DeepCopyInto(out *PandaproxyAPITLS) {
	*out = *in
	if in.IssuerRef != nil {
		in, out := &in.IssuerRef, &out.IssuerRef
		*out = new(metav1.ObjectReference)
		**out = **in
	}
	if in.NodeSecretRef != nil {
		in, out := &in.NodeSecretRef, &out.NodeSecretRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PandaproxyAPITLS.
func (in *PandaproxyAPITLS) DeepCopy() *PandaproxyAPITLS {
	if in == nil {
		return nil
	}
	out := new(PandaproxyAPITLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PandaproxyExternalConnectivityConfig) DeepCopyInto(out *PandaproxyExternalConnectivityConfig) {
	*out = *in
	in.ExternalConnectivityConfig.DeepCopyInto(&out.ExternalConnectivityConfig)
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(IngressConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PandaproxyExternalConnectivityConfig.
func (in *PandaproxyExternalConnectivityConfig) DeepCopy() *PandaproxyExternalConnectivityConfig {
	if in == nil {
		return nil
	}
	out := new(PandaproxyExternalConnectivityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusConfig) DeepCopyInto(out *PrometheusConfig) {
	*out = *in
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = make([]PrometheusScraperJobConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetRefreshInterval != nil {
		in, out := &in.TargetRefreshInterval, &out.TargetRefreshInterval
		*out = new(apismetav1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusConfig.
func (in *PrometheusConfig) DeepCopy() *PrometheusConfig {
	if in == nil {
		return nil
	}
	out := new(PrometheusConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusEndpointConfig) DeepCopyInto(out *PrometheusEndpointConfig) {
	*out = *in
	out.BasicAuth = in.BasicAuth
	if in.ResponseCacheDuration != nil {
		in, out := &in.ResponseCacheDuration, &out.ResponseCacheDuration
		*out = new(apismetav1.Duration)
		**out = **in
	}
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = new(PrometheusConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusEndpointConfig.
func (in *PrometheusEndpointConfig) DeepCopy() *PrometheusEndpointConfig {
	if in == nil {
		return nil
	}
	out := new(PrometheusEndpointConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusScraperJobConfig) DeepCopyInto(out *PrometheusScraperJobConfig) {
	*out = *in
	if in.KeepLabels != nil {
		in, out := &in.KeepLabels, &out.KeepLabels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusScraperJobConfig.
func (in *PrometheusScraperJobConfig) DeepCopy() *PrometheusScraperJobConfig {
	if in == nil {
		return nil
	}
	out := new(PrometheusScraperJobConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Redpanda) DeepCopyInto(out *Redpanda) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Redpanda.
func (in *Redpanda) DeepCopy() *Redpanda {
	if in == nil {
		return nil
	}
	out := new(Redpanda)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Redpanda) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedpandaAdmin) DeepCopyInto(out *RedpandaAdmin) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedpandaAdmin.
func (in *RedpandaAdmin) DeepCopy() *RedpandaAdmin {
	if in == nil {
		return nil
	}
	out := new(RedpandaAdmin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedpandaClusterSpec) DeepCopyInto(out *RedpandaClusterSpec) {
	*out = *in
	if in.CommonLabels != nil {
		in, out := &in.CommonLabels, &out.CommonLabels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(RedpandaImage)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedpandaClusterSpec.
func (in *RedpandaClusterSpec) DeepCopy() *RedpandaClusterSpec {
	if in == nil {
		return nil
	}
	out := new(RedpandaClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedpandaConfig) DeepCopyInto(out *RedpandaConfig) {
	*out = *in
	out.RPCServer = in.RPCServer
	if in.KafkaAPI != nil {
		in, out := &in.KafkaAPI, &out.KafkaAPI
		*out = make([]KafkaAPI, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdminAPI != nil {
		in, out := &in.AdminAPI, &out.AdminAPI
		*out = make([]AdminAPI, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PandaproxyAPI != nil {
		in, out := &in.PandaproxyAPI, &out.PandaproxyAPI
		*out = make([]PandaproxyAPI, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaRegistry != nil {
		in, out := &in.SchemaRegistry, &out.SchemaRegistry
		*out = new(SchemaRegistryAPI)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalCommandlineArguments != nil {
		in, out := &in.AdditionalCommandlineArguments, &out.AdditionalCommandlineArguments
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedpandaConfig.
func (in *RedpandaConfig) DeepCopy() *RedpandaConfig {
	if in == nil {
		return nil
	}
	out := new(RedpandaConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedpandaImage) DeepCopyInto(out *RedpandaImage) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedpandaImage.
func (in *RedpandaImage) DeepCopy() *RedpandaImage {
	if in == nil {
		return nil
	}
	out := new(RedpandaImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedpandaList) DeepCopyInto(out *RedpandaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Redpanda, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedpandaList.
func (in *RedpandaList) DeepCopy() *RedpandaList {
	if in == nil {
		return nil
	}
	out := new(RedpandaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedpandaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedpandaResourceRequirements) DeepCopyInto(out *RedpandaResourceRequirements) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Redpanda != nil {
		in, out := &in.Redpanda, &out.Redpanda
		*out = make(v1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedpandaResourceRequirements.
func (in *RedpandaResourceRequirements) DeepCopy() *RedpandaResourceRequirements {
	if in == nil {
		return nil
	}
	out := new(RedpandaResourceRequirements)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedpandaSpec) DeepCopyInto(out *RedpandaSpec) {
	*out = *in
	out.ChartRef = in.ChartRef
	in.ClusterSpec.DeepCopyInto(&out.ClusterSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedpandaSpec.
func (in *RedpandaSpec) DeepCopy() *RedpandaSpec {
	if in == nil {
		return nil
	}
	out := new(RedpandaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedpandaStatus) DeepCopyInto(out *RedpandaStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apismetav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedpandaStatus.
func (in *RedpandaStatus) DeepCopy() *RedpandaStatus {
	if in == nil {
		return nil
	}
	out := new(RedpandaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestartConfig) DeepCopyInto(out *RestartConfig) {
	*out = *in
	if in.DisableMaintenanceModeHooks != nil {
		in, out := &in.DisableMaintenanceModeHooks, &out.DisableMaintenanceModeHooks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestartConfig.
func (in *RestartConfig) DeepCopy() *RestartConfig {
	if in == nil {
		return nil
	}
	out := new(RestartConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schema) DeepCopyInto(out *Schema) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schema.
func (in *Schema) DeepCopy() *Schema {
	if in == nil {
		return nil
	}
	out := new(Schema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaRegistryAPI) DeepCopyInto(out *SchemaRegistryAPI) {
	*out = *in
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = new(SchemaRegistryExternalConnectivityConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(SchemaRegistryAPITLS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaRegistryAPI.
func (in *SchemaRegistryAPI) DeepCopy() *SchemaRegistryAPI {
	if in == nil {
		return nil
	}
	out := new(SchemaRegistryAPI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaRegistryAPITLS) DeepCopyInto(out *SchemaRegistryAPITLS) {
	*out = *in
	if in.IssuerRef != nil {
		in, out := &in.IssuerRef, &out.IssuerRef
		*out = new(metav1.ObjectReference)
		**out = **in
	}
	if in.NodeSecretRef != nil {
		in, out := &in.NodeSecretRef, &out.NodeSecretRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaRegistryAPITLS.
func (in *SchemaRegistryAPITLS) DeepCopy() *SchemaRegistryAPITLS {
	if in == nil {
		return nil
	}
	out := new(SchemaRegistryAPITLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaRegistryExternalConnectivityConfig) DeepCopyInto(out *SchemaRegistryExternalConnectivityConfig) {
	*out = *in
	in.ExternalConnectivityConfig.DeepCopyInto(&out.ExternalConnectivityConfig)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaRegistryExternalConnectivityConfig.
func (in *SchemaRegistryExternalConnectivityConfig) DeepCopy() *SchemaRegistryExternalConnectivityConfig {
	if in == nil {
		return nil
	}
	out := new(SchemaRegistryExternalConnectivityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaRegistryStatus) DeepCopyInto(out *SchemaRegistryStatus) {
	*out = *in
	if in.ExternalNodeIPs != nil {
		in, out := &in.ExternalNodeIPs, &out.ExternalNodeIPs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaRegistryStatus.
func (in *SchemaRegistryStatus) DeepCopy() *SchemaRegistryStatus {
	if in == nil {
		return nil
	}
	out := new(SchemaRegistryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretKeyRef) DeepCopyInto(out *SecretKeyRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretKeyRef.
func (in *SecretKeyRef) DeepCopy() *SecretKeyRef {
	if in == nil {
		return nil
	}
	out := new(SecretKeyRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretManagerAWS) DeepCopyInto(out *SecretManagerAWS) {
	*out = *in
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.AWSCredentialsRef != nil {
		in, out := &in.AWSCredentialsRef, &out.AWSCredentialsRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretManagerAWS.
func (in *SecretManagerAWS) DeepCopy() *SecretManagerAWS {
	if in == nil {
		return nil
	}
	out := new(SecretManagerAWS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretManagerGCP) DeepCopyInto(out *SecretManagerGCP) {
	*out = *in
	if in.CredentialsSecretRef != nil {
		in, out := &in.CredentialsSecretRef, &out.CredentialsSecretRef
		*out = new(SecretKeyRef)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretManagerGCP.
func (in *SecretManagerGCP) DeepCopy() *SecretManagerGCP {
	if in == nil {
		return nil
	}
	out := new(SecretManagerGCP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretStore) DeepCopyInto(out *SecretStore) {
	*out = *in
	if in.GCPSecretManager != nil {
		in, out := &in.GCPSecretManager, &out.GCPSecretManager
		*out = new(SecretManagerGCP)
		(*in).DeepCopyInto(*out)
	}
	if in.AWSSecretManager != nil {
		in, out := &in.AWSSecretManager, &out.AWSSecretManager
		*out = new(SecretManagerAWS)
		(*in).DeepCopyInto(*out)
	}
	if in.KafkaConnect != nil {
		in, out := &in.KafkaConnect, &out.KafkaConnect
		*out = new(SecretStoreKafkaConnect)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretStore.
func (in *SecretStore) DeepCopy() *SecretStore {
	if in == nil {
		return nil
	}
	out := new(SecretStore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretStoreKafkaConnect) DeepCopyInto(out *SecretStoreKafkaConnect) {
	*out = *in
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]SecretStoreKafkaConnectCluster, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretStoreKafkaConnect.
func (in *SecretStoreKafkaConnect) DeepCopy() *SecretStoreKafkaConnect {
	if in == nil {
		return nil
	}
	out := new(SecretStoreKafkaConnect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretStoreKafkaConnectCluster) DeepCopyInto(out *SecretStoreKafkaConnectCluster) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretStoreKafkaConnectCluster.
func (in *SecretStoreKafkaConnectCluster) DeepCopy() *SecretStoreKafkaConnectCluster {
	if in == nil {
		return nil
	}
	out := new(SecretStoreKafkaConnectCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Server) DeepCopyInto(out *Server) {
	*out = *in
	if in.ServerGracefulShutdownTimeout != nil {
		in, out := &in.ServerGracefulShutdownTimeout, &out.ServerGracefulShutdownTimeout
		*out = new(apismetav1.Duration)
		**out = **in
	}
	if in.HTTPServerReadTimeout != nil {
		in, out := &in.HTTPServerReadTimeout, &out.HTTPServerReadTimeout
		*out = new(apismetav1.Duration)
		**out = **in
	}
	if in.HTTPServerWriteTimeout != nil {
		in, out := &in.HTTPServerWriteTimeout, &out.HTTPServerWriteTimeout
		*out = new(apismetav1.Duration)
		**out = **in
	}
	if in.HTTPServerIdleTimeout != nil {
		in, out := &in.HTTPServerIdleTimeout, &out.HTTPServerIdleTimeout
		*out = new(apismetav1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Server.
func (in *Server) DeepCopy() *Server {
	if in == nil {
		return nil
	}
	out := new(Server)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sidecar) DeepCopyInto(out *Sidecar) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sidecar.
func (in *Sidecar) DeepCopy() *Sidecar {
	if in == nil {
		return nil
	}
	out := new(Sidecar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sidecars) DeepCopyInto(out *Sidecars) {
	*out = *in
	if in.RpkStatus != nil {
		in, out := &in.RpkStatus, &out.RpkStatus
		*out = new(Sidecar)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sidecars.
func (in *Sidecars) DeepCopy() *Sidecars {
	if in == nil {
		return nil
	}
	out := new(Sidecars)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SocketAddress) DeepCopyInto(out *SocketAddress) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SocketAddress.
func (in *SocketAddress) DeepCopy() *SocketAddress {
	if in == nil {
		return nil
	}
	out := new(SocketAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageSpec) DeepCopyInto(out *StorageSpec) {
	*out = *in
	out.Capacity = in.Capacity.DeepCopy()
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageSpec.
func (in *StorageSpec) DeepCopy() *StorageSpec {
	if in == nil {
		return nil
	}
	out := new(StorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Superuser) DeepCopyInto(out *Superuser) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Superuser.
func (in *Superuser) DeepCopy() *Superuser {
	if in == nil {
		return nil
	}
	out := new(Superuser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfig) DeepCopyInto(out *TLSConfig) {
	*out = *in
	if in.IssuerRef != nil {
		in, out := &in.IssuerRef, &out.IssuerRef
		*out = new(metav1.ObjectReference)
		**out = **in
	}
	if in.NodeSecretRef != nil {
		in, out := &in.NodeSecretRef, &out.NodeSecretRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfig.
func (in *TLSConfig) DeepCopy() *TLSConfig {
	if in == nil {
		return nil
	}
	out := new(TLSConfig)
	in.DeepCopyInto(out)
	return out
}
