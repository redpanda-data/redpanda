
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusters.redpanda.vectorized.io
spec:
  group: redpanda.vectorized.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              additionalConfiguration:
                additionalProperties:
                  type: string
                description: "For configuration parameters not exposed, a map can
                  be provided for string values. Such values are passed transparently
                  to Redpanda. The key format is \"<subsystem>.field\", e.g., \n additionalConfiguration:
                  \  redpanda.enable_idempotence: \"true\"   redpanda.default_topic_partitions:
                  \"3\"   pandaproxy_client.produce_batch_size_bytes: \"2097152\"
                  \n Notes: 1. versioning is not supported for map keys 2. key names
                  not supported by Redpanda will lead to failure on start up 3. updating
                  this map requires a manual restart of the Redpanda pods. Please
                  be aware of sync period when one Redpandais POD is restarted 4.
                  cannot have keys that conflict with existing struct fields - it
                  leads to panic \n By default if Replicas is 3 or more and redpanda.default_topic_partitions
                  is not set default webhook is setting redpanda.default_topic_partitions
                  to 3."
                type: object
              annotations:
                additionalProperties:
                  type: string
                description: If specified, Redpanda Pod annotations
                type: object
              cloudStorage:
                description: Cloud storage configuration for cluster
                properties:
                  accessKey:
                    description: Cloud storage access key
                    type: string
                  apiEndpoint:
                    description: API endpoint for data storage
                    type: string
                  apiEndpointPort:
                    description: Used to override TLS port (443)
                    type: integer
                  bucket:
                    description: Cloud storage bucket
                    type: string
                  disableTLS:
                    description: Disable TLS (can be used in tests)
                    type: boolean
                  enabled:
                    description: Enables data archiving feature
                    type: boolean
                  maxConnections:
                    description: Number of simultaneous uploads per shard (default
                      - 20)
                    type: integer
                  reconciliationIntervalMs:
                    description: Reconciliation period (default - 10s)
                    type: integer
                  region:
                    description: Cloud storage region
                    type: string
                  secretKeyRef:
                    description: 'Reference to (Kubernetes) Secret containing the
                      cloud storage secret key. SecretKeyRef must contain the name
                      and namespace of the Secret. The Secret must contain a data
                      entry of the form: data[<SecretKeyRef.Name>] = <secret key>'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  trustfile:
                    description: Path to certificate that should be used to validate
                      server certificate
                    type: string
                required:
                - enabled
                type: object
              configuration:
                description: Configuration represent redpanda specific configuration
                properties:
                  adminApi:
                    items:
                      description: AdminAPI configures listener for the Redpanda Admin
                        API
                      properties:
                        external:
                          description: External enables user to expose Redpanda admin
                            API outside of a Kubernetes cluster. For more information
                            please go to ExternalConnectivityConfig
                          properties:
                            enabled:
                              description: Enabled enables the external connectivity
                                feature
                              type: boolean
                            subdomain:
                              description: Subdomain can be used to change the behavior
                                of an advertised KafkaAPI. Each broker advertises
                                Kafka API as follows BROKER_ID.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT.
                                If Subdomain is empty then each broker advertises
                                Kafka API as PUBLIC_NODE_IP:EXTERNAL_KAFKA_API_PORT.
                                If TLS is enabled then this subdomain will be requested
                                as a subject alternative name.
                              type: string
                          type: object
                        port:
                          type: integer
                        tls:
                          description: Configuration of TLS for Admin API
                          properties:
                            enabled:
                              type: boolean
                            requireClientAuth:
                              type: boolean
                          type: object
                      type: object
                    type: array
                  autoCreateTopics:
                    description: Enable auto-creation of topics. Reference https://kafka.apache.org/documentation/#brokerconfigs_auto.create.topics.enable
                    type: boolean
                  developerMode:
                    type: boolean
                  groupTopicPartitions:
                    description: Number of partitions in the internal group membership
                      topic
                    type: integer
                  kafkaApi:
                    items:
                      description: KafkaAPI configures listener for the Kafka API
                      properties:
                        external:
                          description: External enables user to expose Redpanda nodes
                            outside of a Kubernetes cluster. For more information
                            please go to ExternalConnectivityConfig
                          properties:
                            enabled:
                              description: Enabled enables the external connectivity
                                feature
                              type: boolean
                            subdomain:
                              description: Subdomain can be used to change the behavior
                                of an advertised KafkaAPI. Each broker advertises
                                Kafka API as follows BROKER_ID.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT.
                                If Subdomain is empty then each broker advertises
                                Kafka API as PUBLIC_NODE_IP:EXTERNAL_KAFKA_API_PORT.
                                If TLS is enabled then this subdomain will be requested
                                as a subject alternative name.
                              type: string
                          type: object
                        port:
                          type: integer
                        tls:
                          description: Configuration of TLS for Kafka API
                          properties:
                            enabled:
                              type: boolean
                            issuerRef:
                              description: References cert-manager Issuer or ClusterIssuer.
                                When provided, this issuer will be used to issue node
                                certificates. Typically you want to provide the issuer
                                when a generated self-signed one is not enough and
                                you need to have a verifiable chain with a proper
                                CA certificate.
                              properties:
                                group:
                                  description: Group of the resource being referred
                                    to.
                                  type: string
                                kind:
                                  description: Kind of the resource being referred
                                    to.
                                  type: string
                                name:
                                  description: Name of the resource being referred
                                    to.
                                  type: string
                              required:
                              - name
                              type: object
                            nodeSecretRef:
                              description: 'If provided, operator uses certificate
                                in this secret instead of issuing its own node certificate.
                                The secret is expected to provide the following keys:
                                ''ca.crt'', ''tls.key'' and ''tls.crt'' If NodeSecretRef
                                points to secret in different namespace, operator
                                will duplicate the secret to the same namespace as
                                redpanda CRD to be able to mount it to the nodes'
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            requireClientAuth:
                              description: Enables two-way verification on the server
                                side. If enabled, all Kafka API clients are required
                                to have a valid client certificate.
                              type: boolean
                          type: object
                      type: object
                    type: array
                  pandaproxyApi:
                    items:
                      description: PandaproxyAPI configures listener for the Pandaproxy
                        API
                      properties:
                        external:
                          description: External enables user to expose Redpanda nodes
                            outside of a Kubernetes cluster. For more information
                            please go to ExternalConnectivityConfig
                          properties:
                            enabled:
                              description: Enabled enables the external connectivity
                                feature
                              type: boolean
                            subdomain:
                              description: Subdomain can be used to change the behavior
                                of an advertised KafkaAPI. Each broker advertises
                                Kafka API as follows BROKER_ID.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT.
                                If Subdomain is empty then each broker advertises
                                Kafka API as PUBLIC_NODE_IP:EXTERNAL_KAFKA_API_PORT.
                                If TLS is enabled then this subdomain will be requested
                                as a subject alternative name.
                              type: string
                          type: object
                        port:
                          type: integer
                        tls:
                          description: Configuration of TLS for Pandaproxy API
                          properties:
                            enabled:
                              type: boolean
                            requireClientAuth:
                              type: boolean
                          type: object
                      type: object
                    type: array
                  rpcServer:
                    description: SocketAddress provide the way to configure the port
                    properties:
                      port:
                        type: integer
                    type: object
                  schemaRegistry:
                    description: SchemaRegistryAPI configures the schema registry
                      API
                    properties:
                      external:
                        description: External enables user to expose Redpanda nodes
                          outside of a Kubernetes cluster. For more information please
                          go to ExternalConnectivityConfig
                        properties:
                          enabled:
                            description: Enabled enables the external connectivity
                              feature
                            type: boolean
                          subdomain:
                            description: Subdomain can be used to change the behavior
                              of an advertised KafkaAPI. Each broker advertises Kafka
                              API as follows BROKER_ID.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT.
                              If Subdomain is empty then each broker advertises Kafka
                              API as PUBLIC_NODE_IP:EXTERNAL_KAFKA_API_PORT. If TLS
                              is enabled then this subdomain will be requested as
                              a subject alternative name.
                            type: string
                        type: object
                      port:
                        description: Port will set the schema registry listener port
                          in Redpanda configuration. If not set the default will be
                          8081
                        type: integer
                      tls:
                        description: TLS is the configuration for schema registry
                        properties:
                          enabled:
                            type: boolean
                          requireClientAuth:
                            type: boolean
                        type: object
                    required:
                    - port
                    type: object
                type: object
              dnsTrailingDotDisabled:
                description: DNSTrailingDotDisabled gives ability to turn off the
                  fully-qualified DNS name. http://www.dns-sd.org/trailingdotsindomainnames.html
                type: boolean
              enableSasl:
                description: SASL enablement flag
                type: boolean
              image:
                description: Image is the fully qualified name of the Redpanda container
                type: string
              nodeSelector:
                additionalProperties:
                  type: string
                description: If specified, Redpanda Pod node selectors. For reference
                  please visit https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node
                type: object
              replicas:
                description: Replicas determine how big the cluster will be.
                format: int32
                minimum: 0
                type: integer
              resources:
                description: Resources used by redpanda process running in container.
                  Beware that there are multiple containers running in the redpanda
                  pod and these can be enabled/disabled and configured from the `sidecars`
                  field. These containers have separate resources settings and the
                  amount of resources assigned to these containers will be required
                  on the cluster on top of the resources defined here
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                type: object
              sidecars:
                description: Sidecars is list of sidecars run alongside redpanda container
                properties:
                  rpkStatus:
                    description: RpkStatus is sidecar running rpk status collecting
                      status information from the running node
                    properties:
                      enabled:
                        description: Enabled if false, the sidecar won't be added
                          to the pod running redpanda node
                        type: boolean
                      resources:
                        description: Resources are resource requirements and limits
                          for the container running this sidecar. For the default
                          sidecars this is defaulted
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                    type: object
                type: object
              startupProbeEnabled:
                description: Wether a Startup probe pointing to /v1/status/started
                  is added to each Redpanda node or not. Enabled by default.
                type: boolean
              startupProbeMaxRetries:
                description: "Used to set the max amount of retries for the StartupProbe
                  before failing and therefore making the node restart. The StartupProbe
                  sends a request to /v1/status/started every 1s until it returns
                  200 or the max amount of retries is reached. The default value is
                  3000 which gives the node around 1 hour to boot. i.e. 3000 retries
                  * 1s period * ~200ms response time ~= 1h. \n The reason behind this
                  default is that for clusters with large amounts of data, the startup
                  of a new node can take 10s of minutes because the `started` endpoint
                  succeeds only until there are no partitions under-replicated. \n
                  The disadvantage of this default value is that it will take around
                  ~1h to notice a failure unrelated to startup. This parameter can
                  be tuned to accomodate smaller clusters. e.g. Assuming that every
                  retry roughly takes 1200ms, if the desired max timeout is 10 min
                  a value of 500 can be used as 10 min/1200 ms = 500"
                format: int32
                type: integer
              storage:
                description: Storage spec for cluster
                properties:
                  capacity:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Storage capacity requested
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  storageClassName:
                    description: Storage class name - https://kubernetes.io/docs/concepts/storage/storage-classes/
                    type: string
                type: object
              superUsers:
                description: List of superusers
                items:
                  description: Superuser has full access to the Redpanda cluster
                  properties:
                    username:
                      type: string
                  required:
                  - username
                  type: object
                type: array
              tolerations:
                description: If specified, Redpanda Pod tolerations
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
              version:
                description: Version is the Redpanda container tag
                type: string
            required:
            - resources
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              nodes:
                description: Nodes of the provisioned redpanda nodes
                properties:
                  external:
                    items:
                      type: string
                    type: array
                  externalAdmin:
                    items:
                      type: string
                    type: array
                  externalPandaproxy:
                    items:
                      type: string
                    type: array
                  internal:
                    items:
                      type: string
                    type: array
                  pandaproxyIngress:
                    type: string
                  schemaRegistry:
                    description: SchemaRegistryStatus reports addresses where schema
                      registry can be reached
                    properties:
                      external:
                        description: "External address should be registered in DNS
                          provider using all public IP of a nodes that Redpanda is
                          scheduled on. \n The External is empty when subdomain is
                          not provided."
                        type: string
                      externalNodeIPs:
                        description: ExternalNodeIPs is only filled when the Schema
                          Registry external connectivity feature flag is enabled,
                          but the subdomain is empty. This gives user ability to register
                          all addresses individually in DNS provider of choice.
                        items:
                          type: string
                        type: array
                      internal:
                        type: string
                    type: object
                type: object
              replicas:
                description: Replicas show how many nodes are working in the cluster
                format: int32
                type: integer
              upgrading:
                description: Indicates cluster is upgrading
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
