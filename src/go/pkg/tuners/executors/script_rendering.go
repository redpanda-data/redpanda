package executors

import (
	"bufio"
	"fmt"
	"vectorized/pkg/tuners/executors/commands"

	"github.com/spf13/afero"
)

type scriptRenderingExecutor struct {
	deffered error
	writer   *bufio.Writer
}

func NewScriptRenderingExecutor(fs afero.Fs, filename string) Executor {
	file, err := fs.Create(filename)
	if err != nil {
		return &scriptRenderingExecutor{
			deffered: err,
			writer:   nil,
		}
	}
	err = fs.Chmod(filename, 0755)
	if err != nil {
		return &scriptRenderingExecutor{
			deffered: err,
			writer:   nil,
		}
	}
	w := bufio.NewWriter(file)
	fmt.Fprintln(w, "#!/bin/bash")
	fmt.Fprintln(w)
	fmt.Fprintln(w, "# Redpanda Tuning Script")
	fmt.Fprintln(w, "# ----------------------------------")
	fmt.Fprintln(w, "# This file was autogenerated by RPK")
	fmt.Fprintln(w)
	return &scriptRenderingExecutor{
		deffered: nil,
		writer:   w,
	}
}

func (e *scriptRenderingExecutor) Execute(cmd commands.Command) error {
	return cmd.RenderScript(e.writer)
}

func (e *scriptRenderingExecutor) IsLazy() bool {
	return true
}
